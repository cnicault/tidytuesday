---
title: "Haunted Places"
author: "Christophe Nicault"
date: "14/10/2023"
format: html
---


```{r}
#| label: load-packages
#| echo: false
#| warning: false

library(tidyverse)
library(sf)
library(cartogram)
library(showtext)
library(patchwork)
library(cowplot)
library(usmap)

font_add_google("Creepster", "creepster")
font_add_google("Share Tech Mono", "techmono")
font_add_google("Roboto Condensed", "roboto condensed")
font_add_google("Oswald", "oswald")
font_add_google("lexend", "lexend")
showtext_opts(dpi = 320)
showtext_auto(enable = TRUE)
```

```{r}
#| label: load-data
#| echo: false
#| warning: false

haunted_places <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-10-10/haunted_places.csv')

haunted <- haunted_places |> 
  count(state, state_abbrev, sort = TRUE) |> 
  mutate(state = tolower(state))

```


```{r}
#| label: colors
#| echo: false
#| warning: false

grad_low <- "#F2EA79"
grad_high = "#D92B04"
bck_clr = "black"
text_clr = "#F29905"
point_clr = "red"
title_clr = "#F24A05"
```

```{r}
#| label: custom-theme
#| echo: false
#| warning: false

haunted_theme <- function() {
  theme_void()+
  theme(
        plot.background = element_rect(fill = bck_clr),
        legend.position = "none",
        plot.caption = element_text(color=text_clr, hjust = 0.5, size=12, family="lexend"),
        plot.margin = margin(0,0,0,0),
        plot.title=element_text(color=text_clr, hjust = 0.5, size=12, family="lexend"),
  )
}
```


```{r}
#| label: data-prep
#| echo: false
#| warning: false

# states sf for all maps except hexbin
states <- us_map(regions="states")

states_lv1 <- states |> 
  st_as_sf(coords=c("x", "y"), crs=usmap::usmap_crs()) |> 
  group_by(abbr, group) |> 
  summarize(geometry=st_combine(geometry)) |> 
  st_cast("POLYGON")

states_lv2 <- states_lv1 |> 
  group_by(abbr) |> 
  summarize(geometry=st_combine(geometry)) |> 
  st_cast("MULTIPOLYGON")

states_sf <- left_join(states_lv2, haunted, by=c( "abbr"="state_abbrev"))


# places sf for spatial point
places <- haunted_places |> 
  filter(!is.na(city_longitude), !is.na(city_latitude), state_abbrev %in% states_sf$abbr) |> 
  usmap_transform(input_names=c("city_longitude", "city_latitude"))

places_sf <- places|> 
  select(x, y) |> 
  st_as_sf(coords=c("x", "y"), crs=st_crs(states_sf)) 

places_sf <- st_intersection(places_sf, states_sf)

```


```{r}
#| label: cartogram
#| echo: false
#| warning: false

states_cartogram <- cartogram_cont(states_sf, "n")

cartogram_plot <- ggplot()+
  geom_sf(data = states_cartogram, aes(fill = n), linewidth=0.1)+
  scale_fill_gradient(low = grad_low, high = grad_high)+
  labs(caption="Cartogram")+
  haunted_theme()
```


```{r}
#| label: spatial-points
#| echo: false
#| warning: false

point_plot <- ggplot()+
  geom_sf(data = states_sf, linewidth=0.1, fill="grey80", alpha=0.1, color="grey30")+
  geom_sf(data=places_sf, color = point_clr, size=0.1)+
  scale_fill_gradient(low = grad_low, high = grad_high)+
  labs(title="Spatial points")+
  haunted_theme()
```


```{r}
#| label: hexbin
#| echo: false
#| warning: false


# https://team.carto.com/u/andrew/tables/andrew.us_states_hexgrid/public/map
us_hex <- read_sf(here::here("2023", "2023-41-haunted_places", "us_states_hexgrid.geojson")) |> 
  st_transform(crs=3857)

states_hex <- left_join(us_hex, haunted, by=c( "iso3166_2"="state_abbrev"))
states_hex$geometry[states_hex$iso3166_2 == "HI"] <- states_hex$geometry[states_hex$iso3166_2 == "HI"] + c(1000000,0)
centroids <-states_hex |> 
  st_centroid()

hexbin_plot <- ggplot()+
  geom_sf(data=states_hex, aes(fill = n), linewidth=0.1)+
  geom_sf_text(data=centroids, aes(label=iso3166_2), family = "roboto condensed", color="grey30", vjust=-0.5, size=3)+
  geom_sf_text(data=centroids, aes(label=n), family = "oswald", color="black", fontface="bold", vjust=1, size=3.5)+
  scale_fill_gradient(low = grad_low, high = grad_high)+
  labs(caption="Hexbin")+
  haunted_theme()
```


```{r}
#| label: choropleth
#| echo: false
#| warning: false

choropleth_plot <- ggplot()+
  geom_sf(data = states_sf, aes(fill = n), linewidth=0.1)+
  scale_fill_gradient(low = grad_low, high = grad_high)+
  labs(title="Choropleth")+
  haunted_theme()
```

```{r}
#| label: legend
#| echo: false
#| warning: false

leg <- ggplot()+
    geom_sf(data = states_sf, aes(fill = n), linewidth=0.1)+
    scale_fill_gradient(low = grad_low, high = grad_high)+
    labs(fill="Number of haunted places")+
    guides(fill = guide_colourbar(
                      direction="horizontal",
                      label.position = "bottom",
                      title.position = "top",
                      title.hjust = 0.5,
                      barwidth = unit(10, "line"),
                      barheight = unit(0.5, "line"),
                      nrow = 1
                      )
          )+
  theme_void()+
  theme(plot.background = element_rect(fill = bck_clr),
        legend.title = element_text(color=text_clr,family = "roboto condensed", size=10),
        legend.text = element_text(color=text_clr,family = "roboto condensed", size=8))

legend <- cowplot::get_legend(leg)

```


```{r}
#| label: final
#| echo: false
#| warning: false

final <- (choropleth_plot + point_plot + hexbin_plot + cartogram_plot)+ plot_layout(widths = c(2, 2))+
  plot_annotation(
    title = "Haunted places in the US",
    subtitle = "4 different ways to visualize haunted places",
    caption = "Visualization: Christophe Nicault | Data: Tim Renner on data.world",
    theme = theme(
    plot.background = element_rect(fill = bck_clr, color =NA),
    plot.title = element_text(family = "creepster", color=title_clr, size = 22, face = "bold", hjust = 0.5, margin = margin(5,0,0,0)),
    plot.subtitle = element_text(family = "creepster", color=title_clr, size = 16, hjust = 0.5, margin = margin(5,0,10,0)),
    plot.caption = element_text(family = "techmono", color=text_clr, size = 8, hjust = 0.98, margin = margin(10,0,5,0))
    )
  )

ragg::agg_png(here::here("render", paste0("haunted_places", "_", format(Sys.time(), "%Y%m%d_%H%M%S"), ".png")), res = 320, width = 10, height = 8, units = "in")

ggdraw(final) + draw_plot(legend, x = 0.18, y = 0.43, width = 0.1, height = 0.05)

dev.off()
```

